{{- if ne .Values.name "api" }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.name}}
  labels:
    app: {{ .Values.name}}
spec:
  replicas: {{ .Values.replicas}}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ .Values.name}}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
  template:
    metadata:
      labels:
        app: {{ .Values.name}}
        # version: {{ .Values.tag}}
    spec:
      containers:
      - name: {{ .Values.name}}
        image: {{ .Values.image}}:{{ .Values.tag}}
    {{- if .Values.command }}
        command: {{ .Values.command}}
    {{- end}}
    {{- if .Values.args }}
        args: {{ .Values.args}}
    {{- end}}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.env.PORT}}
          protocol: TCP
        readinessProbe:
    {{- if .Values.path }}
          httpGet:
            path:  {{ .Values.path}}
            port: {{ .Values.env.PORT}}
      {{  else  }}   
          tcpSocket:
            port: {{ .Values.env.PORT}}
    {{- end }}
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 2
          failureThreshold: 5
        livenessProbe:
          timeoutSeconds: 2
          initialDelaySeconds: 5
          failureThreshold: 3
    {{- if .Values.path }}
          httpGet:
            path:  {{ .Values.path}}
            port: {{ .Values.env.PORT}}
      {{  else  }}   
          tcpSocket:
            port: {{ .Values.env.PORT}}
    {{- end }}
        env:
        {{- range $name, $value := .Values.env }}
        {{- if not (empty $value) }}
        - name: {{ $name | quote }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            memory: "512Mi"
            cpu: "1"
  {{- end }}